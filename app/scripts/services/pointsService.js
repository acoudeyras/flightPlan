// Generated by CoffeeScript 1.7.1
(function() {
  'use strict';
  var PointsService, parseHelpers;
  parseHelpers = {
    eq: function(field, val) {
      return "{\"" + field + "\":" + val + "}";
    },
    like: function(field, val) {
      return this.eq(field, "{\"$regex\":\"" + val + "\"}");
    },
    beginWith: function(field, val) {
      return this.eq(field, "{\"$regex\":\"^" + val + "\"}");
    },
    ftsearch: function(field, val) {
      var beginVal;
      val = val.trim().toLowerCase();
      beginVal = "{\"$regex\":\"^" + val + "\"}";
      beginVal = '"' + val + '"';
      return this.eq(field, "{\"$all\":[" + beginVal + "]}");
    }
  };
  PointsService = (function() {
    function PointsService($resource) {
      this.Point = $resource('https://api.parse.com/1/classes/Point', {}, {
        query: {
          method: 'GET',
          isArray: true,
          headers: {
            'X-Parse-Application-Id': 'IKEiwnzgURrngabC1gxIZFF5O0jPfz0D1DzWjsHO',
            'X-Parse-REST-API-Key': 'dCHVZQBmSm1FcYLI3KSHC4YwRSWoT5sh6I33wfD4'
          },
          transformResponse: function(data) {
            data = JSON.parse(data);
            return data.results;
          }
        }
      });
      this.Point.property('fullName', {
        get: function() {
          return "" + this.name + " (" + this.code + ")";
        }
      });
    }

    PointsService.prototype.all = function() {
      return this.Point.query();
    };

    PointsService.prototype.query = function(term) {
      var whereClause;
      if (term.trim() === '') {
        return this.Point.query();
      }
      whereClause = parseHelpers.ftsearch('words', term);
      alert(whereClause);
      return this.Point.query({
        where: whereClause
      });
    };

    PointsService.prototype.get = function(code) {};

    return PointsService;

  })();
  PointsService.$inject = ['$resource'];
  return angular.module('flightPlanApp').service('pointsService', PointsService);
})();
