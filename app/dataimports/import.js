// Generated by CoffeeScript 1.6.2
'use strict';
var fs, helpers, phantomEval, pointListFromLocal, pointRetriever, pointsRetriever, readPoints, save;

fs = require('fs');

pointsRetriever = require('./points-retriever');

pointRetriever = require('./point-retriever');

phantomEval = require('./phantomjs-evaluator');

helpers = require('./helpers');

save = function(outputPath, data, callback) {
  if (typeof data !== 'string') {
    data = JSON.stringify(data, null, '\t');
  }
  return fs.writeFile(outputPath, data, callback);
};

pointListFromLocal = function(callback) {
  return fs.readFile('./data/points-list.json', function(err, data) {
    if (err) {
      return callback(err);
    }
    return callback(null, JSON.parse(data));
  });
};

readPoints = function(points, current, next) {
  var point, pointFilePath;

  if (current === points.length) {
    return next();
  }
  point = points[current];
  pointFilePath = "./data/point-" + point.code + ".json";
  return fs.exists(pointFilePath, function(exist) {
    console.log(pointFilePath);
    return pointRetriever.getPoint(point, function(err, pointDetail) {
      if (err) {
        console.log(err);
        return readPoints(points, ++current, next);
      }
      helpers.extend(point, pointDetail);
      save(pointFilePath, point, function(err) {
        if (err) {
          return console.log(err);
        }
      });
      return readPoints(points, ++current, next);
    });
  });
};

pointListFromLocal(function(err, points) {
  if (err) {
    return console.log(err);
  }
  return save('./data/points-list.json', points, function(err) {
    if (err) {
      return console.log(err);
    }
    return readPoints(points, 0, function() {
      return phantomEval.exit();
    });
  });
});
