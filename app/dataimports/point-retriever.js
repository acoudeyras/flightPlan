// Generated by CoffeeScript 1.6.2
'use strict';
var extract, extractAirportData, extractVorData, phantomEval;

phantomEval = require('./phantomjs-evaluator');

extract = function() {
  var readColumns, readRows, table;

  readColumns = function(columns, rowObj) {
    var name, value;

    if (columns.length < 2) {
      return;
    }
    name = columns[0], value = columns[1];
    return rowJson[name.innerText] = value.innerText;
  };
  readRows = function(table, skip) {
    var currentRow, result, row, rows, _i, _len;

    result = {};
    rows = table.children[0].children;
    skip = skip || 0;
    currentRow = -1;
    for (_i = 0, _len = rows.length; _i < _len; _i++) {
      row = rows[_i];
      currentRow++;
      if (currentRow < skip) {
        continue;
      }
      readColumns(row.children, result);
    }
    return result;
  };
  table = document.querySelectorAll('table')[0];
  return readRows(table, 2);
};

extractVorData = function() {
  return extract();
};

extractAirportData = function() {
  return 'ok';
};

exports.getPoint = function(point, callback) {
  var getData, _ref, _ref1;

  getData = function(extractor) {
    return phantomEval.loadPage(point.url, extract, callback);
  };
  if ((_ref = point.category) === 'CAT') {
    return getData(extractVorData);
  } else if ((_ref1 = point.category) === 'VOR' || _ref1 === 'VOR/DME' || _ref1 === 'VORTAC') {
    return getData(extractAirportData);
  } else {
    throw "Category " + point.category + " not yet supported";
  }
};
